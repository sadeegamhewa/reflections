* How did viewing a diff between two versions of a file help you see the bug
that was introduced?

I was able to compare easier because I could see the files I updated.

* How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

You can see how the changes to your program evolved over time.

* What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

You won't have partially complete changes saved, etc

* Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file
separately?

Because in code, multiple files can be related to each other.

* How can you use the commands git log and git diff to view the history of
files?

You use git log to look at the commit history and git diff to look at changes
between commits.

* How might using version control make you more confident to make changes that
could break something?

Because I can always go back and see where I caused the issue and fix it.

* Now that you have your workspace set up, what do you want to try using Git
for?

To manage all my code!

*
